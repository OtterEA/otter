#################################### otter 自动部署工具配置文件  ################
# 安装方式(online|offline),离线部署暂时未适配
OTTER_INSTALL_METHOD: online

# 是否启用混合架构部署(如果启用,离线下载时将会下载多架构二进制命令与镜像)
# 如果集群内有多架构请设置为true，否则会导致节点无法获取离线资源包
OTTER_MIXED_ENABLE: false

##################################  Chronyd 时间同步设置 ###########################
## 时间同步服务器IPS,如果有多个请填多个
# eg: TIME_SERVER: ["localhost"] TIME_SERVER: ["localhost","127.0.0.1"]
TIME_SERVER: ["localhost","127.0.0.1"]

##################################  RunTime 配置 #################################
# runtime 选择，目前只支持docker，未适配containerd
RUNTIME_TYPE: docker

##################################  Docker 配置  #################################
# Docker版本,已验证版本: 
DOCKER_VERSION: 20.10.24

# Docker 数据目录
DOCKER_ROOT_DATA: /var/lib/docker

# Docker driver版本(systemd|cgroupfs)
# tips: Docker版本>=20.10才能使用systemd驱动
DOCKER_DRIVER: systemd

# docker网段设置(如有网络冲突，可自行修改,一般默认即可)
DOCKER_BIP: 192.168.244.1/24

# Docker Remote API是否开启
DOCKER_REMOTE_API_ENABLE: false

################################ Containerd 配置(暂时未适配) #######################

############################### CRI-Docker 配置(暂时未适配) ########################


################################ K8S 配置   #######################################
# k8s 版本
KUBERNETES_VERSION: 1.22.17

# pod网段设置(如有网络冲突，可自行修改,一般默认即可) 
POD_NETWORK_CIDR: 10.244.0.0/16

# service 网段(如有网络冲突，可自行修改，一般默认即可)
SERVICE_CIDR: 10.96.0.0/12

# k8s网络模式(默认启用ipvs,当缺少ipvs模块时，启动切换iptables)
KUBERNETES_NETWORK_MODEL: ipvs

# k8s cni插件类型,暂时只支持flannel
# flannel 默认网络模式为VXLAN
KUBERNETES_CNI_TYPE: flannel

# k8s VIP，当K8S高可用时,node节点将基于lvscare，使用这个VIP与APIserver通信
# 当节点数<=3时，可不用填
KUBERNETES_VIP: 127.0.0.1

# k8s etcd数据目录(如有单独磁盘供etcd使用，可修改该路径-在安装前修改)
KUBERNETES_ETCD_DATA_DIR: /var/lib/etcd

# 主节点是否可调度
KUBERNETES_SCHEDULE_ENABLE: true

# 是否部署metrics server组件
KUBERNETES_METRICS_SERVER_ENABLE: true

# 是否部署kubernetes dashboard
KUBERNETES_DASHBOARD_ENABLE: true

# k8s deschduler组件是否部署(不清楚该组件作用，请勿部署)
KUBERNETES_DSCHEDULE_ENABLE: false

# 是否启用K8S节点压力保护
KUBERNETES_PRESSURE_PROTECTION_ENABLE: true

# 是否启用k8s kube-reserved保护,如需要就开启,部分系统存在兼容性问题
# 部分系统开启后可能会出现:Failed to start ContainerManager Failed to enforce Kube Reserved Cgroup Limits on "/kubelet.slice": ["kubelet"] cgroup does not exist
KUBERNETES_KUBE_RESERVED_ENABLE: false

# 是否启用k8s systemd reserved保护, 如需要就开启,部分系统存在兼容性问题
# 部分系统开启后可能会出现:Failed to start ContainerManager Failed to enforce Kube Reserved Cgroup Limits on "/kubelet.slice": ["kubelet"] cgroup does not exist
KUBERNETES_SYSTEMD_RESERVED_ENABLE: false

# K8S 是否启用双栈网络(IPV4/IPV6),暂时未适配
KUBERNETES_DUAL_STACK_ENABLE: false

# k8s init token(设置默认的bootstrap token),永久生效
# 生成方式：head -c 16 /dev/urandom | od -An -t x | tr -d ' '
KUBERNETES_APISERVER_AUTH_TOKEN: 2ee257d1ebf19c8f387a28d84b5e5987

# 默认生成bootstrap token，永久生效
KUBERNETES_BOOTSTRAP_TOKEN: 9a08jv.c0izixklcxtmnze7

# kubeadm 加密证书和密钥的密钥(主要用于控制平面加入集群时使用),永久生效
KUBERNETES_CERTIFICATE_KEY: 5333dd1e432c9a3563870608bea3e412d664040d891492aa6fb1c47d95cefe6c

# 国内K8S镜像源地址
KUBERNETES_IMAGE_REPO: registry.cn-hangzhou.aliyuncs.com/google_containers

##################### 各类中间件是否启用开关  #############################
# 是否部署HARBOR，HARBOR部署方式为Chart部署,我们默认推荐部署
# 如果不部署Harbor，K8S镜像将用阿里云初始化
HARBOR_ENABLE: false

# 是否部署监控
MONITOR_ENABLE: false


############################# 非维护人员,下面配置请勿修改，默认即可 #########
# cni 插件版本
CNI_PLUGIN_VERSION: 1.1.1

# helm3 版本
HELM_VERSION: 3.11.3

# k9s版本
K9S_VERSION: 0.27.3

######## 集群镜像坐标 ###########################
# k8s镜像坐标
K8S:
  # 适用于k8s <= 1.25
  k8s-flannel-v0.18.1:
    k8s-flannel-cni-plugin-v0.18.1: flannelcni/flannel-cni-plugin:v1.1.0
    k8s-flannel-v0.18.1: flannelcni/flannel:v0.18.1
  # 适用于k8s >= 1.25
  k8s-flannel-v0.21.4:
    k8s-flannel-cni-plugin-v0.21.4: flannel/flannel-cni-plugin:v1.1.2
    k8s-flannel-v0.21.4: flannel/flannel:v0.21.4