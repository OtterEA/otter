- block:
  - name: Check CNI Plugin Binary Package Exist for Multi-architecture
    stat: path={{ item }}
    register: cni_plugin_file_state
    with_items:
    - "{{ playbook_dir | dirname }}/files/bin/cni-plugin/x86_64/cni-plugin-v{{ CNI_PLUGIN_VERSION }}.tgz"
    - "{{ playbook_dir | dirname }}/files/bin/cni-plugin/aarch64/cni-plugin-v{{ CNI_PLUGIN_VERSION }}.tgz"
  
  - name: CNI PLUGIN Package Not Exist
    fail: msg="CNI PLUGIN Binary Package Not Exist"
    when: false in ( cni_plugin_file_state.results | map(attribute='stat.exists') | list )
  any_errors_fatal: true
  when: 
  - OTTER_MIXED_ENABLE | default(false) | bool == true
  - inventory_hostname == ansible_env['SSH_CLIENT'].split() | first   # just ansible controller run this block

- block:
  - name: Check CNI PLUGIN Binary Package Exist
    stat: path={{ playbook_dir | dirname }}/files/bin/cni-plugin/{{ ansible_architecture }}/cni-plugin-v{{ CNI_PLUGIN_VERSION }}.tgz
    register: cni_plugin_file_state
  
  - name: CNI PLUGIN Binary Package Not Exist
    fail: msg="CNI PLUGIN Binary Package Not Exist"
    when: cni_plugin_file_state.stat.exists == false
  any_errors_fatal: true
  when: 
  - OTTER_MIXED_ENABLE | default(false) | bool == false
  - inventory_hostname == ansible_env['SSH_CLIENT'].split() | first   # just ansible controller run this block

# 拷贝CNI组件
- block:
  - name: Create Temp Directory for otter
    file: path=/tmp/otter/cni-plugin state=directory mode=0755 recurse=yes 

  - name: Unarchive CNI PLUGIN Binary Package
    unarchive: src={{ playbook_dir | dirname }}/files/bin/cni-plugin/{{ ansible_architecture }}/cni-plugin-v{{ CNI_PLUGIN_VERSION }}.tgz dest=/tmp/otter/cni-plugin
  
  - name: Get All Files of /tmp/otter/cni-plugin
    find: paths=/tmp/otter/cni-plugin file_type=file 
    register: cni_plugin_binary_files
  
  - name: Copy CNI PLUGIN Binary Files to /opt/cni/bin
    copy: src={{ item.path }} dest=/opt/cni/bin/{{ item.path | basename }} remote_src=yes mode=0755
    loop_control:
      label: "{{ item.path | basename }}"
    with_items: "{{ cni_plugin_binary_files.files }}"


- name: Deploy Flanel for Kubernetes 
  include_tasks: kube-flannel-v0.21.4.yaml
  when: KUBERNETES_VERSION.split('.')[0:2]|join('.')|float >= 1.25

- name: Deploy Flanel for Kubernetes 
  include_tasks: kube-flannel-v0.18.1.yaml
  when: KUBERNETES_VERSION.split('.')[0:2]|join('.')|float < 1.25