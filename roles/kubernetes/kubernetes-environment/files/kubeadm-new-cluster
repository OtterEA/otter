apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
bootstrapTokens:
- token: 9a08jv.c0izixklcxtmnze7
  description: "kubeadm bootstrap token"
  ttl: "0" # 0=永久生效
  usages:
  - authentication
  - signing
  groups:
  - system:bootstrappers:kubeadm:default-node-token
localAPIEndpoint:
  advertiseAddress: 192.168.0.21
  bindPort: 6443
certificateKey: 5333dd1e432c9a3563870608bea3e412d664040d891492aa6fb1c47d95cefe6c
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
kubernetesVersion: 1.23.17
controlPlaneEndpoint: apiserver.cluster.local:6443
imageRepository: registry.otter.local/k8s
certificatesDir: "/etc/kubernetes/pki"
networking:
  dnsDomain: cluster.local
  podSubnet: 10.244.0.0/16
  serviceSubnet: 10.96.0.0/12
apiServer:
  certSANs:
  - 127.0.0.1
  - apiserver.cluster.local
  extraArgs:
    feature-gates: TTLAfterFinished=true,EphemeralContainers=true
    enable-aggregator-routing: "true"
    token-auth-file: /etc/kubernetes/pki/token.csv
  extraVolumes:
  - name: localtime
    hostPath: /etc/localtime
    mountPath: /etc/localtime
    readOnly: true
    pathType: File
  timeoutForControlPlane: 4m0s
controllerManager:
  extraArgs:
    feature-gates: TTLAfterFinished=true,RotateKubeletServerCertificate=true,EphemeralContainers=true
    experimental-cluster-signing-duration: 876000h0m0s
    pod-eviction-timeout: 5m0s
    terminated-pod-gc-threshold: "10"
  extraVolumes:
  - hostPath: /etc/localtime
    mountPath: /etc/localtime
    name: localtime
    readOnly: true
    pathType: File
scheduler:
  extraArgs:
    feature-gates: TTLAfterFinished=true,EphemeralContainers=true
  extraVolumes:
  - hostPath: /etc/localtime
    mountPath: /etc/localtime
    name: localtime
    readOnly: true
    pathType: File
etcd:
  local:
    #imageRepository: k8s
    #imageTag: v1
    dataDir: /var/lib/etcd
    extraArgs:
      listen-metrics-urls: http://0.0.0.0:2381
      heartbeat-interval: "500"
      election-timeout: "5000"
dns:
  type: CoreDNS
  # 可能版本问题，官网显示支持，实际不支持
  #ImageMeta:
  #  imageRepository: 
  #  imageTag:
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
address: 0.0.0.0
healthzPort: 10248
healthzBindAddress: 0.0.0.0
authentication:
  anonymous:
    enabled: false
  webhook:
    cacheTTL:  2m0s
    enabled: true
  x509:
    clientCAFile: /etc/kubernetes/pki/ca.crt
authorization:
  mode: Webhook
  webhook:
    cacheAuthorizedTTL: 5m0s
    cacheUnauthorizedTTL: 30s
clusterDomain: cluster.local
rotateCertificates: true
cgroupDriver: systemd
httpCheckFrequency: 20s
syncFrequency: 1m0s
runtimeRequestTimeout: 2m0s
fileCheckFrequency: 20s
volumeStatsAggPeriod: 1m0s
shutdownGracePeriod: 0s
nodeStatusReportFrequency: 5m0s
nodeStatusUpdateFrequency: 10s
shutdownGracePeriodCriticalPods: 0s
streamingConnectionIdleTimeout: 4h
evictionPressureTransitionPeriod: 5m0s
eventBurst: 10
eventRecordQPS: 5
staticPodPath: /etc/kubernetes/manifests
protectKernelDefaults: false
cgroupsPerQOS: true
containerLogMaxSize: "10Mi"
containerLogMaxFiles: 5	
logging: {}
imageMinimumGCAge: 2m
imageGCHighThresholdPercent: 85
imageGCLowThresholdPercent: 80
serializeImagePulls: true
maxPods: 110
oomScoreAdj: -999
readOnlyPort: 0
failSwapOn: true
enforceNodeAllocatable:
- pods
evictionHard:
  imagefs.available: 15%
  memory.available:  300Mi
  nodefs.available:  10%
  nodefs.inodesFree: 5%
evictionSoft:
  imagefs.available: 20%
  memory.available:  500Mi
  nodefs.available:  15%
  nodefs.inodesFree: 10%
evictionSoftGracePeriod:
  memory.available: 5m
  nodefs.available: 5m
  nodefs.inodesFree: 5m
  imagefs.available: 5m
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
bindAddress: 0.0.0.0
metricsBindAddress: 0.0.0.0 
mode: ipvs
