- name: Create Kubernetes image Directory
  file: path=/tmp/otter/images state=directory recurse=yes mode=0755

- block:
  - name: Check Kubernetes image file Exist
    stat: path=/tmp/otter/images/kubernetes.tar
    register: kubernetes_image_file_state
  
  - name: Copy Kubernetes image file
    copy: src={{ playbook_dir | dirname }}/files/images/k8s/{{ ansible_architecture }}/kubernetes.tar dest=/tmp/otter/images/kubernetes.tar
    when: kubernetes_image_file_state.stat.exists == false
  always:
  - name: Docker Load Kubernetes image file
    shell: docker load -q -i /tmp/otter/images/kubernetes.tar
    register: kubernetes_image_list

  - name: Tag Kubernetes Image  
    shell: docker tag $(echo {{ item }} | awk '{print $3}') {{ HARBOR_DOMAIN }}/k8s/$(echo {{ item }} | awk '{print $3}' | awk -F'/' '{print $NF}')
    with_items: "{{ kubernetes_image_list.stdout_lines }}"

# "msg": "Loaded image: kubernetesui/metrics-scraper:v1.0.8"
#  - name: Tag Kubernetes Without Full Name
#    debug: msg="docker tag {{ item | regex_replace('(Loaded image:)\s(.*)','\\2') }} {{ HARBOR_DOMAIN }}/k8s/{{ (item | regex_replace('(Loaded image:)\s(.*)','\\2')).split('/')[1] }}"
#    when: (item | regex_replace('(Loaded image:)\s(.*)','\\2')).split('/') | length == 2
#    with_items: "{{ kubernetes_image_list.stdout_lines }}"
#  
#  - name: Tag Kubernetes image With Full Name
#    debug: msg="docker tag {{ item | regex_replace('(Loaded image:)\s(.*)','\\2') }} {{ HARBOR_DOMAIN }}/k8s/{{ (item | regex_replace('(Loaded image:)\s(.*)','\\2')).split('/')[2] }}"
#    when: (item | regex_replace('(Loaded image:)\s(.*)','\\2')).split('/') | length == 3
#    with_items: "{{ kubernetes_image_list.stdout_lines }}"